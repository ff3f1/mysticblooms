import { TelegramClient } from "telegram";
import { StringSession } from "telegram/sessions/index.js";
import input from "input";
import fs from "fs";
import dotenv from "dotenv";

dotenv.config();

const apiId = parseInt(process.env.API_ID);
const apiHash = process.env.API_HASH;
const SESSION_FILE = "./session.txt";

let stringSession;

if (fs.existsSync(SESSION_FILE)) {
  const savedSession = fs.readFileSync(SESSION_FILE, "utf8");
  stringSession = new StringSession(savedSession.trim());
  console.log("‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω–∞—è —Å–µ—Å—Å–∏—è");
} else {
  stringSession = new StringSession("");
  console.log("üì± –ü–µ—Ä–≤–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è, –Ω—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ –Ω–æ–º–µ—Ä");
}

const client = new TelegramClient(stringSession, apiId, apiHash, {
  connectionRetries: 5,
});

async function run() {
  await client.start({
    phoneNumber: async () => await input.text("üìû –¢–µ–ª–µ—Ñ–æ–Ω: "),
    password: async () => await input.text("üîê –ü–∞—Ä–æ–ª—å: "),
    phoneCode: async () => await input.text("üì© –ö–æ–¥: "),
    onError: (err) => console.log("‚ùå –û—à–∏–±–∫–∞:", err),
  });

  console.log("‚úÖ –í–æ—à–ª–∏ –≤ –∞–∫–∫–∞—É–Ω—Ç");

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–µ—Å—Å–∏—é –≤ —Ñ–∞–π–ª
  const sessionStr = client.session.save();
  fs.writeFileSync(SESSION_FILE, sessionStr);
  console.log("üíæ –°–µ—Å—Å–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ session.txt");

  // –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å—Ç—ã
  const channel = await client.getEntity("mysticbloomsflower");
  const messages = await client.getMessages(channel, { limit: 20 });

  const posts = messages
    .filter((msg) => msg.message)
    .map((msg) => ({
      id: msg.id,
      text: msg.message,
      date: Math.floor(msg.date.getTime() / 1000),
      media: !!msg.media,
    }));

  fs.writeFileSync("public/posts.json", JSON.stringify(posts, null, 2));
  console.log("üì¶ –ü–æ—Å—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ public/posts.json");

  process.exit();
}

run();
